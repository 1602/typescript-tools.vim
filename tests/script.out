node ../bin/tss.js test.ts
// stdout
"loaded PREFIX/test.ts, TSS listening.."
[{"file":"PREFIX/test.ts","start":{"line":3,"col":6},"end":{"line":4,"col":2},"text":"Expected identifier following dot"}]
"string"
"s2: string"
{"def":{"unitIndex":2,"minChar":14,"limChar":26,"kind":"var","name":"s2","containerKind":"","containerName":"__GLO"},"file":"PREFIX/test.ts","min":[1,15],"lim":[2,13]}
{"maybeInaccurate":false,"isMemberCompletion":true,"entries":[{"name":"toString","type":"() => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.toString","docComment":"Returns a string representation of a string. "},{"name":"charAt","type":"(pos: number) => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.charAt","docComment":"Returns the character at the specified index."},{"name":"charCodeAt","type":"(index: number) => number","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.charCodeAt","docComment":"Returns the Unicode value of the character at the specified location."},{"name":"concat","type":"(...strings: string[]) => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.concat","docComment":"Returns a string that contains the concatenation of two or more strings."},{"name":"indexOf","type":"(searchString: string, position?: number) => number","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.indexOf","docComment":"Returns the position of the first occurrence of a substring. "},{"name":"lastIndexOf","type":"(searchString: string, position?: number) => number","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.lastIndexOf","docComment":"Returns the last occurrence of a substring in the string."},{"name":"localeCompare","type":"(that: string) => number","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.localeCompare","docComment":"Determines whether two strings are equivalent in the current locale."},{"name":"match","type":"(regexp: string) => string[] (+ 1 overload(s))","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.match","docComment":"Matches a string with a regular expression, and returns an array containing the results of that search."},{"name":"replace","type":"(searchValue: string, replaceValue: string) => string (+ 3 overload(s))","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.replace","docComment":"Replaces text in a string, using a regular expression or search string."},{"name":"search","type":"(regexp: string) => number (+ 1 overload(s))","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.search","docComment":"Finds the first substring match in a regular expression search."},{"name":"slice","type":"(start: number, end?: number) => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.slice","docComment":"Returns a section of a string."},{"name":"split","type":"(separator: string, limit?: number) => string[] (+ 1 overload(s))","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.split","docComment":"Split a string into substrings using the specified separator and return them as an array."},{"name":"substring","type":"(start: number, end?: number) => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.substring","docComment":"Returns the substring at the specified location within a String object. "},{"name":"toLowerCase","type":"() => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.toLowerCase","docComment":"Converts all the alphabetic characters in a string to lowercase. "},{"name":"toLocaleLowerCase","type":"() => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.toLocaleLowerCase","docComment":"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale. "},{"name":"toUpperCase","type":"() => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.toUpperCase","docComment":"Converts all the alphabetic characters in a string to uppercase. "},{"name":"toLocaleUpperCase","type":"() => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.toLocaleUpperCase","docComment":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale. "},{"name":"trim","type":"() => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.trim","docComment":"Removes the leading and trailing white space and line terminator characters from a string. "},{"name":"substr","type":"(from: number, length?: number) => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.substr","docComment":"Gets a substring beginning at the specified location and having the specified length."},{"name":"length","type":"number","kind":"property","kindModifiers":"public","fullSymbolName":"String.length","docComment":"Returns the length of a String object. "}]}
"updated PREFIX/test.ts"
"dumped PREFIX/test.ts to script.dump"
{"maybeInaccurate":false,"isMemberCompletion":true,"entries":[{"name":"toString","type":"() => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.toString","docComment":"Returns a string representation of a string. "},{"name":"charAt","type":"(pos: number) => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.charAt","docComment":"Returns the character at the specified index."},{"name":"charCodeAt","type":"(index: number) => number","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.charCodeAt","docComment":"Returns the Unicode value of the character at the specified location."},{"name":"concat","type":"(...strings: string[]) => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.concat","docComment":"Returns a string that contains the concatenation of two or more strings."},{"name":"indexOf","type":"(searchString: string, position?: number) => number","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.indexOf","docComment":"Returns the position of the first occurrence of a substring. "},{"name":"lastIndexOf","type":"(searchString: string, position?: number) => number","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.lastIndexOf","docComment":"Returns the last occurrence of a substring in the string."},{"name":"localeCompare","type":"(that: string) => number","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.localeCompare","docComment":"Determines whether two strings are equivalent in the current locale."},{"name":"match","type":"(regexp: string) => string[] (+ 1 overload(s))","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.match","docComment":"Matches a string with a regular expression, and returns an array containing the results of that search."},{"name":"replace","type":"(searchValue: string, replaceValue: string) => string (+ 3 overload(s))","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.replace","docComment":"Replaces text in a string, using a regular expression or search string."},{"name":"search","type":"(regexp: string) => number (+ 1 overload(s))","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.search","docComment":"Finds the first substring match in a regular expression search."},{"name":"slice","type":"(start: number, end?: number) => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.slice","docComment":"Returns a section of a string."},{"name":"split","type":"(separator: string, limit?: number) => string[] (+ 1 overload(s))","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.split","docComment":"Split a string into substrings using the specified separator and return them as an array."},{"name":"substring","type":"(start: number, end?: number) => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.substring","docComment":"Returns the substring at the specified location within a String object. "},{"name":"toLowerCase","type":"() => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.toLowerCase","docComment":"Converts all the alphabetic characters in a string to lowercase. "},{"name":"toLocaleLowerCase","type":"() => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.toLocaleLowerCase","docComment":"Converts all alphabetic characters to lowercase, taking into account the host environment's current locale. "},{"name":"toUpperCase","type":"() => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.toUpperCase","docComment":"Converts all the alphabetic characters in a string to uppercase. "},{"name":"toLocaleUpperCase","type":"() => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.toLocaleUpperCase","docComment":"Returns a string where all alphabetic characters have been converted to uppercase, taking into account the host environment's current locale. "},{"name":"trim","type":"() => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.trim","docComment":"Removes the leading and trailing white space and line terminator characters from a string. "},{"name":"substr","type":"(from: number, length?: number) => string","kind":"method","kindModifiers":"declare,public","fullSymbolName":"String.substr","docComment":"Gets a substring beginning at the specified location and having the specified length."},{"name":"length","type":"number","kind":"property","kindModifiers":"public","fullSymbolName":"String.length","docComment":"Returns the length of a String object. "}]}
"TSS closing"

// stderr

